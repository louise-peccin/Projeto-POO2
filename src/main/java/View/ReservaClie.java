/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import DAO.ApartamentoDAO;
import DAO.ReservaDAO;
import model.Apartamento;
import model.Reserva;
import DAO.ProprietarioDAO; 
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;
import java.util.List;

public class ReservaClie extends javax.swing.JFrame {

    private ReservaDAO reservaDAO;
    private ApartamentoDAO apartamentoDAO;
    private List<Apartamento> listaApartamentos;
    private Apartamento apartamentoSelecionado;
    private final String emailClienteLogado;
    private ProprietarioDAO proprietarioDAO;
    
    public ReservaClie(String emailClienteLogado) {
        this.emailClienteLogado = emailClienteLogado;
        reservaDAO = new ReservaDAO();
        apartamentoDAO = new ApartamentoDAO();
        proprietarioDAO = new ProprietarioDAO(); 
        initComponents();
        carregarApartamentos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableApartamentos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnSair = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        ctDataInicio = new javax.swing.JTextField();
        ctDataFim = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnConfirmaReserva = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cbQtdeHospedes = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel7.setText("Cliente");

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));

        jTableApartamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Cidade ", "Bairro", "N° de quartos", "Hóspedes", "Preço"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableApartamentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableApartamentosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableApartamentos);

        jLabel1.setText("Apartamentos disponiveis");

        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        jLabel2.setText("Data de Entrada (yyyy-mm-dd):");

        jLabel3.setText("Data de Saída (yyyy-mm-dd):");

        btnConfirmaReserva.setText("Confirmar Reserva");
        btnConfirmaReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmaReservaActionPerformed(evt);
            }
        });

        jLabel4.setText("Quantidade de Pessoas: ");

        cbQtdeHospedes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnConfirmaReserva)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSair))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ctDataInicio))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ctDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbQtdeHospedes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ctDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ctDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbQtdeHospedes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSair)
                    .addComponent(btnConfirmaReserva))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void jTableApartamentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableApartamentosMouseClicked
        int rowIndex = jTableApartamentos.getSelectedRow();
        if (rowIndex != -1) {
            int idApartamento = (int) jTableApartamentos.getValueAt(rowIndex, 0);
            apartamentoSelecionado = buscarApartamentoPorId(idApartamento);
        }
    }//GEN-LAST:event_jTableApartamentosMouseClicked

    private void btnConfirmaReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmaReservaActionPerformed
       String dataInicio = ctDataInicio.getText().trim();
    String dataFim = ctDataFim.getText().trim();

    // Validar as datas
    if (dataInicio.isEmpty() || dataFim.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Preencha as datas de entrada e saída.", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        int qtdeHospedes = Integer.parseInt(cbQtdeHospedes.getSelectedItem().toString());

        // Buscar o ID do cliente pelo email
        int clienteId = proprietarioDAO.buscarIdPorEmail(emailClienteLogado);

        if (clienteId == -1) {
            JOptionPane.showMessageDialog(this, "Cliente não encontrado para o email logado.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Reserva reserva = new Reserva();
        reserva.setClienteId(clienteId); // Definir o ID do cliente encontrado
        reserva.setApartamentoId(apartamentoSelecionado.getId());
        reserva.setDataInicio(dataInicio);
        reserva.setDataFim(dataFim);
        reserva.setQuantidadePessoas(qtdeHospedes);

        // Inserir reserva no banco de dados
        reservaDAO.inserir(reserva);

        JOptionPane.showMessageDialog(this, "Reserva confirmada com sucesso!");
        limparCampos(); // Limpar campos após a reserva
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Erro ao confirmar reserva: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Quantidade de hóspedes inválida.", "Erro", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnConfirmaReservaActionPerformed
    
    private void carregarApartamentos(){
        DefaultTableModel model = (DefaultTableModel) jTableApartamentos.getModel();
        model.setRowCount(0); // Limpa a tabela

        try {
            listaApartamentos = apartamentoDAO.listar();

            for (Apartamento apto : listaApartamentos) {
                model.addRow(new Object[]{
                    apto.getId(),
                    apto.getCidade(),
                    apto.getBairro(),
                    apto.getQuartos(),
                    apto.getHospedesMax(),
                    apto.getPreco()
                });
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar apartamentos: " + ex.getMessage());
        }
    }
    private void limparCampos() {
    ctDataInicio.setText("");
    ctDataFim.setText("");
    apartamentoSelecionado = null;
}
    private Apartamento buscarApartamentoPorId(int id) {
        for (Apartamento apto : listaApartamentos) {
            if (apto.getId() == id) {
                return apto;
            }
        }
        return null;
    }
   

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReservaClie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReservaClie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReservaClie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReservaClie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReservaClie("exemplo@exemplo.com").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirmaReserva;
    private javax.swing.JButton btnSair;
    private javax.swing.JComboBox<String> cbQtdeHospedes;
    private javax.swing.JTextField ctDataFim;
    private javax.swing.JTextField ctDataInicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableApartamentos;
    // End of variables declaration//GEN-END:variables
}
